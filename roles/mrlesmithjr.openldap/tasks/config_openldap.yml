---
- name: config_openldap | configuring ldap
  template:
    src: "etc/ldap/ldap.conf.j2"
    dest: "/etc/ldap/ldap.conf"
    owner: root
    group: root
    mode: 0644

- name: config_openldap | configuring phpldapadmin
  template:
    src: "etc/phpldapadmin/config.php.j2"
    dest: "/etc/phpldapadmin/config.php"
    owner: root
    group: www-data
    mode: 0640

- name: config_openldap | creating database population config
  template:
    src: "etc/ldap/slapd.d/populate_content.ldif.j2"
    dest: "/etc/ldap/slapd.d/populate_content.ldif"
    owner: root
    group: root
    mode: 0640

- name: Make sure we have a parent entry for users
  ldap_entry:
    dn: ou=People,dc=lanathome,dc=com
    objectClass: organizationalUnit
    server_uri:   ldapi:///localhost
    bind_dn: "{{ openldap_bind_id }}"
    bind_pw: "{{ openldap_admin_password }}"
    state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Make sure we have a parent entry for groups
  ldap_entry:
    dn: ou=Groups,dc=lanathome,dc=com
    objectClass:
      - organizationalUnit
      - top
    attributes:
      ou: Groups
    server_uri:   ldapi:///localhost
    bind_dn: "{{ openldap_bind_id }}"
    bind_pw: "{{ openldap_admin_password }}"
    state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Create saunix group
  ldap_entry:
    dn: cn=saunix,ou=Groups,dc=lanathome,dc=com
    objectClass:
      - posixGroup
    attributes:
      cn: saunix
      gidnumber: 5001
    server_uri:   ldapi:///localhost
    bind_dn: "{{ openldap_bind_id }}"
    bind_pw: "{{ openldap_admin_password }}"
    state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Create dba group
  ldap_entry:
    dn: cn=dba,ou=Groups,dc=lanathome,dc=com
    objectClass:
      - posixGroup
    attributes:
      cn: saunix
      gidnumber: 5001
    server_uri:   ldapi:///localhost
    bind_dn: "{{ openldap_bind_id }}"
    bind_pw: "{{ openldap_admin_password }}"
    state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Create middleware group
  ldap_entry:
    dn: cn=middleware,ou=Groups,dc=lanathome,dc=com
    objectClass:
      - posixGroup
    attributes:
      cn: saunix
      gidnumber: 5001
    server_uri:   ldapi:///localhost
    bind_dn: "{{ openldap_bind_id }}"
    bind_pw: "{{ openldap_admin_password }}"
    state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Create user ngr
  ldap_entry:
    dn: uid=ngr,ou=People,dc=lanathome,dc=com
    objectClass:
      - inetOrgPerson
      - posixAccount
      - shadowAccount
    attributes:
      cn: ngr
      displayname: Aurelien Grosshans
      gecos: Aurelien Grosshans
      gidnumber: 5001
      givenname: Aurelien
      homedirectory: /home/ngr
      loginshell: /bin/bash
      sn: Grosshans
      uid: ngr
      uidnumber: 10001
      userpassword: 4eathqme!
    server_uri:   ldapi:///localhost
    bind_dn: "{{ openldap_bind_id }}"
    bind_pw: "{{ openldap_admin_password }}"
    state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Create user mly
  ldap_entry:
    dn: uid=mly,ou=People,dc=lanathome,dc=com
    objectClass:
      - inetOrgPerson
      - posixAccount
      - shadowAccount
    attributes:
      cn: myl
      displayname: Marie-Laure Leroy
      gecos: Marie-Laure Leroy
      gidnumber: 5001
      givenname: Marie-Laure
      homedirectory: /home/mly
      loginshell: /bin/bash
      sn: Leroy
      uid: mly
      uidnumber: 10002
      userpassword: 4eathqme!
    server_uri:   ldapi:///localhost
    bind_dn: "{{ openldap_bind_id }}"
    bind_pw: "{{ openldap_admin_password }}"
    state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Create user mgr
  ldap_entry:
    dn: uid=mgr,ou=People,dc=lanathome,dc=com
    objectClass:
      - inetOrgPerson
      - posixAccount
      - shadowAccount
    attributes:
      cn: mgr
      displayname: Maxime Grosshans
      gecos: Maxime Grosshans
      gidnumber: 5002
      givenname: Maxime
      homedirectory: /home/mgr
      loginshell: /bin/bash
      sn: Grosshans
      uid: mgr
      uidnumber: 10003
      userpassword: 4eathqme!
    server_uri:   ldapi:///localhost
    bind_dn: "{{ openldap_bind_id }}"
    bind_pw: "{{ openldap_admin_password }}"
    state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Create user lgr
  ldap_entry:
    dn: uid=lgr,ou=People,dc=lanathome,dc=com
    objectClass:
      - inetOrgPerson
      - posixAccount
      - shadowAccount
    attributes:
      cn: lgr
      displayname: Louise Grosshans
      gecos: Louise Grosshans
      gidnumber: 5004
      givenname: Louise
      homedirectory: /home/lgr
      loginshell: /bin/bash
      sn: Grosshans
      uid: lgr
      uidnumber: 10004
      userpassword: 4eathqme!
    server_uri:   ldapi:///localhost
    bind_dn: "{{ openldap_bind_id }}"
    bind_pw: "{{ openldap_admin_password }}"
    state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Create SUDOers
  ldap_entry:
    dn: ou=SUDOers,dc=lanathome,dc=com
    objectClass: 
      - top
      - organizationalUnit
    attributes:    
      ou: SUDOers
    server_uri:   ldapi:///localhost
    bind_dn: "{{ openldap_bind_id }}"
    bind_pw: "{{ openldap_admin_password }}"
    state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Create sudoOption
  ldap_entry:
    dn: cn=defaults,ou=SUDOers,dc=lanathome,dc=com
    objectClass:
      - top
      - sudoRole
    attributes:
      cn: defaults
      description: Default sudoOption's go here
      sudoOption: requiretty
      sudoOption: env_reset
      sudoOption: env_keep = "COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME L
C_NUMERIC LC_PAPER LC_TELEPHONE LC_TIME LC_ALL LANGUAGE LINGUAS_XKB_CHARSET XAUTHORITY"
    server_uri:   ldapi:///localhost
    bind_dn: "{{ openldap_bind_id }}"
    bind_pw: "{{ openldap_admin_password }}"
    state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Create cn=root,ou=SUDOers,dc=lanathome,dc=com
  ldap_entry:
    dn: cn=root,ou=SUDOers,dc=lanathome,dc=com
  objectClass:
    - top
    - sudoRole
  attributes:
    cn: root
    sudoUser: root
    sudoHost: ALL
    sudoRunas: ALL
    sudoCommand: ALL
  server_uri:   ldapi:///localhost
  bind_dn: "{{ openldap_bind_id }}"
  bind_pw: "{{ openldap_admin_password }}"
  state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate

- name: Create cn=ADMINS,ou=SUDOers,dc=lanathome,dc=com
  ldap_entry:
    dn: cn=ADMINS,ou=SUDOers,dc=lanathome,dc=com
  objectClass:
    - top
    - sudoRole
  attributes:
    cn: ADMINS
    sudoUser: testuser
    sudoHost: ALL
    sudoRunas: ALL
    sudoCommand: ALL
  server_uri:   ldapi:///localhost
  bind_dn: "{{ openldap_bind_id }}"
  bind_pw: "{{ openldap_admin_password }}"
  state: present
  ignore_errors: yes  #set to get around erroring out that items already exist
  when: >
        openldap_populate is defined and
        openldap_populate